<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>技术文章写作计划</title>
    <link href="/2023/07/06/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%E5%86%99%E4%BD%9C%E8%AE%A1%E5%88%92/"/>
    <url>/2023/07/06/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%E5%86%99%E4%BD%9C%E8%AE%A1%E5%88%92/</url>
    
    <content type="html"><![CDATA[<ul><li><input checked="" disabled="" type="checkbox"> 滑动验证码的识别</li><li><input checked="" disabled="" type="checkbox"> 滑动验证码的获取</li><li><input disabled="" type="checkbox"> 点选验证码的识别</li><li><input disabled="" type="checkbox"> ELK简单搭建的demo</li><li><input disabled="" type="checkbox"> 文本聚类</li><li><input disabled="" type="checkbox"> 智能问答</li><li><input disabled="" type="checkbox"> 车牌的识别</li><li><input checked="" disabled="" type="checkbox"> 个人足迹地图（WEB服务）</li><li><input checked="" disabled="" type="checkbox"> 别名发现系统</li><li><input disabled="" type="checkbox"> 读取doc和docx文档</li><li><input checked="" disabled="" type="checkbox"> 利用celery实现定时任务</li><li><input checked="" disabled="" type="checkbox"> 文本标注工具Doccano</li><li><input checked="" disabled="" type="checkbox"> 利用Conda创建Python虚拟环境</li><li><input checked="" disabled="" type="checkbox"> 利用SFTP连接Linux服务器并上传、下载文件</li><li><input checked="" disabled="" type="checkbox"> Flask学习之RESTful API</li><li><input disabled="" type="checkbox"> Flask学习之JWT认证</li><li><input checked="" disabled="" type="checkbox"> BSON文件读取</li><li><input disabled="" type="checkbox"> Flask学习之Flask-SQLALCHEMY</li><li><input checked="" disabled="" type="checkbox"> 设计模式（完成三篇：单例模式、工厂模式、监听模式）</li><li><input disabled="" type="checkbox"> Redis</li><li><input disabled="" type="checkbox"> supervisor使用</li><li><input checked="" disabled="" type="checkbox"> tornado之文件下载（包含中文文件下载）</li><li><input checked="" disabled="" type="checkbox"> 利用CRF实现中文分词</li><li><input checked="" disabled="" type="checkbox"> 利用CRF实现模型预测</li><li><input checked="" disabled="" type="checkbox"> protobuf的初次使用</li><li><input disabled="" type="checkbox"> 更新tensorflow&#x2F;serving中的models.config文件中的model_version_policy</li><li><input checked="" disabled="" type="checkbox"> tensorflow同时使用多个session</li><li><input checked="" disabled="" type="checkbox"> 如何离线安装tensorflow模块</li><li><input checked="" disabled="" type="checkbox"> tensorboard查看ckpt和pb文件模型</li><li><input checked="" disabled="" type="checkbox"> 将ckpt转化为pb文件</li><li><input checked="" disabled="" type="checkbox"> tensorflow&#x2F;serving之BERT模型部署和预测</li><li><input checked="" disabled="" type="checkbox"> tensorflow&#x2F;serving实现模型部署</li><li><input disabled="" type="checkbox"> @property</li><li><input disabled="" type="checkbox"> tf_record</li><li><input disabled="" type="checkbox"> 指代关系抽取</li><li><input disabled="" type="checkbox"> 实体链接（百度实体链接比赛、武器装备知识图谱）</li><li><input checked="" disabled="" type="checkbox"> 文本多分类BERT微调</li><li><input checked="" disabled="" type="checkbox"> 文本多标签分类BERT微调</li><li><input checked="" disabled="" type="checkbox"> 文本序列标注BERT微调</li><li><input checked="" disabled="" type="checkbox"> keras-bert English系列（3个模型稍微调整即可）</li><li><input checked="" disabled="" type="checkbox"> keras-bert调用ALBERT</li><li><input checked="" disabled="" type="checkbox"> keras-bert模型部署</li><li><input checked="" disabled="" type="checkbox"> h5文件转化为pb文件进行部署</li><li><input checked="" disabled="" type="checkbox"> tensorflow&#x2F;serving高效调用</li><li><input disabled="" type="checkbox"> tensorflow_hub实现英文文本二分类</li><li><input disabled="" type="checkbox"> tensorflow2.0和transformers实现文本多分类</li><li><input disabled="" type="checkbox"> 抽取式问答</li><li><input checked="" disabled="" type="checkbox"> 完形填空与文本纠错</li><li><input disabled="" type="checkbox"> transformers实现中文序列标注</li><li><input disabled="" type="checkbox"> tokenizers中的token使用方法</li><li><input disabled="" type="checkbox"> BPE token 算法</li><li><input checked="" disabled="" type="checkbox"> Keras: K折交叉验证</li><li><input checked="" disabled="" type="checkbox"> 使用Prothemus对tensorflow&#x2F;serving进行服务监控</li><li><input checked="" disabled="" type="checkbox"> seqeval获取序列标注实体识别结果</li><li><input disabled="" type="checkbox"> ES进阶</li><li><input checked="" disabled="" type="checkbox"> 从荷兰国旗问题到快速排序</li><li><input disabled="" type="checkbox"> 中英文大模型调研</li><li><input disabled="" type="checkbox"> LLaMA模型的介绍及其使用</li><li><input disabled="" type="checkbox"> Fine-tune LLaMA模型</li><li><input checked="" disabled="" type="checkbox"> OpenAI的tokenizer调研</li><li><input checked="" disabled="" type="checkbox"> Gitlab CI&#x2F;CD 入门</li><li><input checked="" disabled="" type="checkbox"> LangChain使用</li><li><input checked="" disabled="" type="checkbox"> Flask部署</li><li><input disabled="" type="checkbox"> LangChain构建阅读助手</li><li><input disabled="" type="checkbox"> 使用LoRA训练Flan-T5-XXL模型</li><li><input disabled="" type="checkbox"> VSCode连接远程服务器进行开发</li></ul>]]></content>
    
    
    <categories>
      
      <category>写作计划</category>
      
    </categories>
    
    
    <tags>
      
      <tag>写作计划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo+Github搭建个人博客网站</title>
    <link href="/2023/07/06/%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"/>
    <url>/2023/07/06/%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<p>  曾几何时，笔者也幻想过写个项目来搭建属于自己的个人博客。<br>  但是，写程序以及维护的成本，不禁让我犹豫再三，最后还是选择了CSDN等博客网站。将近六年的博客生涯，我尝试了不同的博客网站，各有各的利和弊，不变的是广告，这让人很不爽。<br>  直到今天，我看到了别人写的利用Hexo+Github来搭建个人博客网站，如获至宝。折腾了一阵以后，轻松完成了个人博客的搭建，这种清爽的界面风格，让人耳目一新，同时它又是免费的，功能繁多的，便于维护的。<br>  下面，我将会介绍如何来使用Hexo+Github搭建个人博客网站。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>  为了顺利地完成个人博客网站的搭建，需要做以下准备工作：</p><ul><li>安装Git和NodeJs（版本为18.16.1）；</li><li>安装Hexo（命令为<code>npm i -g hexo</code>）;</li><li>Github账号</li></ul><h3 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h3><p>  下面将分步来介绍如何使用Hexo和Github来搭建个人博客网站。</p><h4 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h4><p>  在Github中新建一个名为username.github.io的空仓库，其中username是你在GitHub上的用户名，比如笔者的仓库名为percent.github.io。</p><h4 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h4><p>  如果想要使用远程从你的电脑上传文件至你的github仓库，那么，你就需要配置SSH。点击你个人Github上的Settings选项，在<code>SSH and GPG keys</code>中配置SSH的公钥，一般公钥位于<code>.ssh/id_rsa.pub</code>中，如下图：<br><img src="https://img-blog.csdnimg.cn/20200609212936859.png" alt="配置SSH"></p><h4 id="博客初始化"><a href="#博客初始化" class="headerlink" title="博客初始化"></a>博客初始化</h4><p>  新建一个空的文件夹，比如笔者新建了文件夹<code>github_blog</code>，使用<code>hexo init</code>命令初始化博客。初始化后的文件夹结构如下：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs 1c">.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br><span class="hljs-string">|   ├── _drafts</span><br><span class="hljs-string">|   └── _posts</span><br>└── themes<br></code></pre></td></tr></table></figure><p>上述文件说明如下：</p><ul><li>_config.yml 网站的 配置 信息，您可以在此配置大部分的参数。</li><li>package.json：应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。</li><li>scaffolds：模版文件夹。当您新建文章时，Hexo会根据 scaffold 来建立文件。</li><li>source：资源文件夹是存放用户资源的地方。</li><li>themes：主题文件夹。Hexo 会根据主题来生成静态页面。</li></ul><h4 id="生成个人博客网站"><a href="#生成个人博客网站" class="headerlink" title="生成个人博客网站"></a>生成个人博客网站</h4><p>  配置_config.yml文件，配置信息如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/percent4/percent4.github.io.git(第一步创建的Github仓库)</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>安装插件<code>npm install hexo-deployer-git --save</code>后，运行如下命令：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> clean<span class="hljs-comment"># 清除数据</span><br>hexo d -g<span class="hljs-comment"># 生成博客</span><br></code></pre></td></tr></table></figure><p>这时候，你会看到博客数据会提交至Github的信息，而第一步创建的空仓库也有了提交内容，当然，你的个人博客也搭建搭建完毕，访问网址为：<a href="https://username.github.io/">https://username.github.io/</a> ，其中username是你在GitHub上的用户名。界面如下：<br><img src="http://tva1.sinaimg.cn/large/006cpotXgy1hfnfvkjupnj31hc0qjanm.jpg" alt="Hexo界面"></p><h3 id="博客维护"><a href="#博客维护" class="headerlink" title="博客维护"></a>博客维护</h3><p>  Hexo提供了一套维护博客的优雅的办法。笔者在此仅介绍如何新建一篇博客。新建博客格式为markdown格式，比如我想创建一篇名为<code>利用Tornado搭建文档预览系统</code>的博客，可以使用以下命令：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type"></span>利用Tornado搭建文档预览系统<br></code></pre></td></tr></table></figure><p>这时候会在你当前目录下的source&#x2F;_posts文件夹下生成<code>利用Tornado搭建文档预览系统.md</code>,其中内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">利用Tornado搭建文档预览系统</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2020-06-09 18:32:29</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>其中title为博客标题，date为博客时间，tags为博客标签。在<code>---</code>后面可以写博客正文的内容。<br>  写完博客后，使用命令</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> clean<span class="hljs-comment"># 清除数据</span><br>hexo d -g<span class="hljs-comment"># 生成博客</span><br></code></pre></td></tr></table></figure><p>就会更新个人博客。</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>  Hexo提供的默认主题为landscape,我们想替换主题为Fluid.<br>  Hexo替换主题为Fluid的步骤如下：</p><ol><li>通过<code>npm</code>直接安装，进入博客目录执行命令：<code>npm install --save hexo-theme-fluid</code></li><li>将node_modules文件夹下的hexo-theme-fluid复制到themes文件夹，并重名为fluid</li><li>在博客目录下创建_config.fluid.yml，将主题的_config.yml内容复制进去，并将<code>theme: </code>后面的主题修改为fluid</li><li>使用<code>hexo s</code>进行本地部署，如无问题，则使用命令<code>hexo d -g</code>进行远程部署</li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>  当然，Hexo还提供了许多丰富的功能，比如theme（主题）的个性化定制等，这会使得你的博客内容更加丰富，功能更加完善。</p><p>  笔者大家的个人博客网站为：<a href="https://percent4.github.io/">https://percent4.github.io/</a> ，欢迎大家访问。以后，笔者将会逐渐往个人博客网站倾斜，而减少使用公开的博客社区。</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Github</tag>
      
      <tag>个人博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何使用Hexo？</title>
    <link href="/2023/07/06/hello-world/"/>
    <url>/2023/07/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>欢迎来到 <a href="https://hexo.io/">Hexo</a>! 这是我的第一篇博客。查阅 <a href="https://hexo.io/docs/">documentation</a> 获取更多信息。 如果你在使用Hexo遇到问题，你可以在这里找到答案 <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> ，或者你可以在这上面提问：<a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="创建一篇新的博客"><a href="#创建一篇新的博客" class="headerlink" title="创建一篇新的博客"></a>创建一篇新的博客</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>更新信息: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="运行服务"><a href="#运行服务" class="headerlink" title="运行服务"></a>运行服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>更新信息: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="产生静态文件"><a href="#产生静态文件" class="headerlink" title="产生静态文件"></a>产生静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>更新信息: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="远程部署"><a href="#远程部署" class="headerlink" title="远程部署"></a>远程部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>更新信息: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
